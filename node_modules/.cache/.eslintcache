[{"C:\\Users\\Richard\\www\\wine\\src\\index.js":"1","C:\\Users\\Richard\\www\\wine\\src\\reportWebVitals.js":"2","C:\\Users\\Richard\\www\\wine\\src\\components\\Hero\\HeroSection.jsx":"3","C:\\Users\\Richard\\www\\wine\\src\\components\\Header\\Navbar.jsx":"4","C:\\Users\\Richard\\www\\wine\\src\\App.js":"5","C:\\Users\\Richard\\www\\wine\\src\\components\\CaptureWine\\Capture.jsx":"6","C:\\Users\\Richard\\www\\wine\\src\\components\\Lists\\WineList.jsx":"7","C:\\Users\\Richard\\www\\wine\\src\\components\\Cellars\\Cellar.jsx":"8","C:\\Users\\Richard\\www\\wine\\src\\components\\Form\\Select.jsx":"9","C:\\Users\\Richard\\www\\wine\\src\\components\\Form\\Input.jsx":"10","C:\\Users\\Richard\\www\\wine\\src\\components\\Modals\\WineListModal.jsx":"11"},{"size":702,"mtime":1678634178805,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1678634178806,"results":"14","hashOfConfig":"13"},{"size":125,"mtime":1678634178800,"results":"15","hashOfConfig":"13"},{"size":1641,"mtime":1678634178799,"results":"16","hashOfConfig":"13"},{"size":1035,"mtime":1678634178787,"results":"17","hashOfConfig":"13"},{"size":6901,"mtime":1678634899166,"results":"18","hashOfConfig":"13"},{"size":3455,"mtime":1678634178802,"results":"19","hashOfConfig":"13"},{"size":9774,"mtime":1678634178793,"results":"20","hashOfConfig":"13"},{"size":2225,"mtime":1678634178796,"results":"21","hashOfConfig":"13"},{"size":1834,"mtime":1678634178795,"results":"22","hashOfConfig":"13"},{"size":6994,"mtime":1678634178804,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ehq5m",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\Richard\\www\\wine\\src\\index.js",[],[],"C:\\Users\\Richard\\www\\wine\\src\\reportWebVitals.js",[],[],"C:\\Users\\Richard\\www\\wine\\src\\components\\Hero\\HeroSection.jsx",[],[],"C:\\Users\\Richard\\www\\wine\\src\\components\\Header\\Navbar.jsx",["64"],[],"import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  // to change burger classes\r\n  const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\");\r\n  const [menu_class, setMenuClass] = useState(\"menu hidden\");\r\n  const [isMenuClicked, setIsMenuClicked] = useState(false);\r\n\r\n  // toggle burger menu change\r\n  const updateMenu = () => {\r\n    if (!isMenuClicked) {\r\n      setBurgerClass(\"burger-bar clicked\");\r\n      setMenuClass(\"menu visible\");\r\n    } else {\r\n      setBurgerClass(\"burger-bar unclicked\");\r\n      setMenuClass(\"menu hidden\");\r\n    }\r\n    setIsMenuClicked(!isMenuClicked);\r\n  };\r\n\r\n  const forward = (target) => {\r\n    //if (target === \"cellar\") window.location.href = \"/cellar\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"burger-logo\">VinoVeritas</div>\r\n      <nav>\r\n        <div className=\"burger-menu\" onClick={updateMenu}>\r\n          <div className={burger_class}></div>\r\n          <div className={burger_class}></div>\r\n          <div className={burger_class}></div>\r\n        </div>\r\n      </nav>\r\n      <div className={menu_class}>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => (window.location.href = \"../\")}\r\n        >\r\n          Liste\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => (window.location.href = \"../cellar\")}\r\n        >\r\n          Cellier\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => (window.location.href = \"../capture\")}\r\n        >\r\n          Ajouter\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Richard\\www\\wine\\src\\App.js",[],[],"C:\\Users\\Richard\\www\\wine\\src\\components\\CaptureWine\\Capture.jsx",["65"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Input from \"../Form/Input\";\r\nimport Select from \"../Form/Select\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nconst initialValues = {\r\n  name: \"\",\r\n  qty: \"0\",\r\n  productor: \"\",\r\n  millesime: \"\",\r\n  grape: \"\",\r\n  group: \"\",\r\n  price: \"\",\r\n  country: \"\",\r\n  commentary: \"\",\r\n  region: \"\",\r\n  img: \"\",\r\n};\r\nconst Capture = (props) => {\r\n  const [currentWine, setCurrentWine] = useState({});\r\n  const [imgFile, setImgFile] = useState({});\r\n  const params = useParams();\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentWine({\r\n      ...currentWine,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addWine = (values) => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines/add\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values),\r\n    }).then(() => {\r\n      window.location.href = \"./\";\r\n    });\r\n  };\r\n\r\n  const updateWine = (values) => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines/update\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values),\r\n    }).then(() => {\r\n      window.location.href = \"../\";\r\n    });\r\n  };\r\n\r\n  const fetchData = () => {\r\n    if (params.wineid) {\r\n      return fetch(\r\n        process.env.REACT_APP_ENPOINT_URL + \"/wines/\" + params.wineid\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCurrentWine(data.obj[0]);\r\n        });\r\n    } else {\r\n      setCurrentWine(initialValues);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // console.log(values);\r\n    if (params.wineid) updateWine(currentWine);\r\n    else addWine(currentWine);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    // console.log(values);\r\n    if (params.wineid) updateWine(currentWine);\r\n    else addWine(currentWine);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const displayButtons = () => {\r\n    if (params.wineid) {\r\n      document.getElementById(\"submitButton\").innerHTML = \"Modifier\";\r\n      document.getElementById(\"deleteButton\").innerHTML = \"Ã‰liminer\";\r\n      document.getElementById(\"qty\").readOnly = true;\r\n      document.getElementById(\"qty\").addEventListener(\"click\", () => {\r\n        window.location.href = \"../Cellar/\" + params.wineid;\r\n      });\r\n    } else {\r\n      document.getElementById(\"submitButton\").innerHTML = \"Enregistrer\";\r\n      document.getElementById(\"deleteButton\").innerHTML = \"Annuler\";\r\n      document.getElementById(\"qty\").readOnly = false;\r\n      document.getElementById(\"qty\").addEventListener(\"click\", () => {\r\n        return false;\r\n      });\r\n    }\r\n  };\r\n\r\n  const fileHandler = (e) => {\r\n    setImgFile(e.target.files[0]);\r\n  };\r\n\r\n  const fileUploadHandler = () => {\r\n    const fd = new FormData();\r\n    fd.append(\"image\", imgFile, imgFile.name);\r\n    axios.post(process.env.REACT_APP_ENPOINT_URL + \"/file\", fd).then((res) => {\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  const imageFile = () => {\r\n    if (currentWine.img !== undefined) {\r\n      return (\r\n        <Input\r\n          id=\"img\"\r\n          type=\"text\"\r\n          message=\"Image\"\r\n          label=\"Image\"\r\n          name=\"img\"\r\n          handleChange={handleChange}\r\n          defaultValue={currentWine.img}\r\n        ></Input>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Input\r\n            id=\"img\"\r\n            type=\"file\"\r\n            label=\"Image\"\r\n            name=\"img\"\r\n            handleChange={fileHandler}\r\n          ></Input>\r\n\r\n          <button onClick={fileUploadHandler}>Enregistrer</button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  //Called once after the render (component is mounted) - the array is the dependency array basically the parameters which trigger the function is they are changed\r\n  useEffect(() => {\r\n    fetchData();\r\n    displayButtons();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={\"list-item-container\"}>\r\n        <Input\r\n          id=\"wineName\"\r\n          type=\"text\"\r\n          message=\"Nom du vin\"\r\n          label=\"Nom\"\r\n          name=\"name\"\r\n          handleChange={handleChange}\r\n          defaultValue={currentWine.name}\r\n        ></Input>\r\n      </div>\r\n      <div className={\"list-item-container\"}>\r\n        <Select\r\n          label=\"Type\"\r\n          name=\"group\"\r\n          handleChange={handleChange}\r\n          list=\"type\"\r\n          defaultValue={currentWine.group}\r\n        />\r\n      </div>\r\n      <div className={\"list-item-container\"}>\r\n        <Select\r\n          label=\"Raisin\"\r\n          name=\"grape\"\r\n          handleChange={handleChange}\r\n          list=\"grapes\"\r\n          defaultValue={currentWine.grape}\r\n        />\r\n      </div>\r\n      <div className={\"list-item-container\"}>\r\n        <Select\r\n          label=\"MillÃ©sime\"\r\n          name=\"millesime\"\r\n          handleChange={handleChange}\r\n          list=\"millesime\"\r\n          defaultValue={currentWine.millesime}\r\n        />\r\n      </div>\r\n      <div className={\"list-item-container\"}>\r\n        <Select\r\n          label=\"Pays\"\r\n          name=\"country\"\r\n          handleChange={handleChange}\r\n          list=\"country\"\r\n          defaultValue={currentWine.country}\r\n        />\r\n      </div>\r\n\r\n      <div className={\"medium-input-container\"}>\r\n        <Input\r\n          id=\"qty\"\r\n          label=\"QtÃ©e\"\r\n          type=\"number\"\r\n          name=\"qty\"\r\n          disabled=\"true\"\r\n          handleChange={handleChange}\r\n          defaultValue={currentWine.qty}\r\n          css=\"medium-input\"\r\n        ></Input>\r\n      </div>\r\n      <div className={\"medium-input-container\"}>\r\n        <Input\r\n          id=\"price\"\r\n          label=\"CoÃ»t\"\r\n          type=\"number\"\r\n          name=\"price\"\r\n          handleChange={handleChange}\r\n          defaultValue={currentWine.price}\r\n          css=\"medium-input\"\r\n        ></Input>\r\n      </div>\r\n      <div className={\"list-item-container\"}>\r\n        <Input\r\n          id=\"comments\"\r\n          message=\"Commentaires\"\r\n          type=\"area\"\r\n          label=\"Commentaires\"\r\n          name=\"commentary\"\r\n          handleChange={handleChange}\r\n          defaultValue={currentWine.commentary}\r\n          cssstyle=\"comment-area\"\r\n        ></Input>\r\n      </div>\r\n      <div className={\"list-item-container\"}>{imageFile()}</div>\r\n      <div className={\"button-container\"}>\r\n        <Button\r\n          id=\"deleteButton\"\r\n          className={\"wine-button\"}\r\n          variant=\"danger\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Annuler\r\n        </Button>\r\n        <Button\r\n          id=\"submitButton\"\r\n          className={\"wine-button\"}\r\n          variant=\"success\"\r\n          onClick={handleDelete}\r\n        >\r\n          Enregistrer\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Capture;\r\n","C:\\Users\\Richard\\www\\wine\\src\\components\\Lists\\WineList.jsx",["66","67"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Input from \"../Form/Input\";\r\nimport Select from \"../Form/Select\";\r\n\r\n//type WineObj = { id_: String, name: string }[];\r\n// const groups = [\r\n//   { id_: 0, name: \"Rouge\" },\r\n//   { id_: 1, name: \"Blanc\" },\r\n//   { id_: 2, name: \"RosÃ©\" },\r\n//   { id_: 3, name: \"Mousseux\" },\r\n//   { id_: 4, name: \"Champagne\" },\r\n//   { id_: 4, name: \"All\" },\r\n// ];\r\n\r\nconst WineList = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [wines, setWines] = useState([]);\r\n  const [wineGroup, setWineGroup] = React.useState(\"All\");\r\n  const [dataIsReturned, setDataReturned] = useState(false);\r\n  const [group, setGroup] = useState(\"All\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const sortByMillesime = (wines) => {\r\n    //if (params.wineid)\r\n    const filtered = wines.filter(inStock);\r\n\r\n    filtered.sort((a, b) => (a.millesime > b.millesime ? 1 : -1));\r\n    return filtered;\r\n  };\r\n\r\n  const inStock = (wines) => {\r\n    return wines.qty > 0;\r\n  };\r\n\r\n  const filteredWine = wines.filter((wine) => {\r\n    if (searchValue === \"\") {\r\n      if (wineGroup === \"All\") return wine;\r\n      else if (wine.group === wineGroup) return wine;\r\n    } else {\r\n      if (\r\n        wine.name.toLowerCase().includes(searchValue.toLowerCase()) &&\r\n        wine.group === wineGroup\r\n      )\r\n        return wine;\r\n    }\r\n  });\r\n\r\n  const fetchData = () => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWines(sortByMillesime(data.obj));\r\n        setDataReturned(true);\r\n      });\r\n  };\r\n\r\n  const filterRed = (e) => {\r\n    setWineGroup(e.target.value);\r\n    // setGroup(e.target.value);\r\n    setSearchValue(searchValue);\r\n    setGroup(e.target.value);\r\n  };\r\n\r\n  const editWine = (id) => {\r\n    window.location.href = \"./Capture/\" + id;\r\n  };\r\n  //Called once after the render (component is mounted) - the array is the dependency array basically the parameters which trigger the function is they are changed\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (dataIsReturned) {\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff \",\r\n            position: \"sticky \",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ display: \"flex\", flexGrow: 1, backgroundColor: \"#fff \" }}\r\n          >\r\n            <Input\r\n              id=\"wineName\"\r\n              message=\"Nom du vin\"\r\n              label=\"\"\r\n              hasLabel=\"false\"\r\n              handleChange={handleInputChange}\r\n            ></Input>\r\n          </div>\r\n          <div style={{ display: \"flex\", right: 0 }}>\r\n            <Select\r\n              handleChange={filterRed}\r\n              defaultValue={group}\r\n              list=\"type\"\r\n              name=\"Type\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {filteredWine.map((wine) => {\r\n          return (\r\n            <div\r\n              className={\"list-item-container\"}\r\n              onClick={() => {\r\n                editWine(wine._id);\r\n              }}\r\n            >\r\n              <div className={\"\"}>\r\n                {wine.name} {wine.millesime} ({wine.qty})\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default WineList;\r\n","C:\\Users\\Richard\\www\\wine\\src\\components\\Cellars\\Cellar.jsx",["68","69","70","71","72","73","74","75","76"],[],"import React, { useState, useEffect } from \"react\";\r\nimport WineListModal from \"../Modals/WineListModal\";\r\nimport styles from \"./location.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Cellar = () => {\r\n  const [locations, setlocations] = useState([]);\r\n\r\n  const [locationId, setlocationId] = useState();\r\n  const [locationArray, setlocationArray] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [wineId, setWineId] = React.useState(\"\");\r\n  const [currentWine, setCurrentWine] = React.useState(\"\");\r\n  const params = useParams();\r\n  const [cellarEmptyCellCount, setCellarEmptyCellCount] = useState(0);\r\n  const [kitchenEmptyCellCount, setKitchenEmptyCellCount] = useState(0);\r\n  const [cellarCellCount, setCellarCellCount] = useState(0);\r\n  const [kitchenCellCount, setKitchenCellCount] = useState(0);\r\n  const [fridgeCellCount, setFridgeCellCount] = useState(0);\r\n\r\n  let center_counter = 0;\r\n  // const handleChange = (e) => {\r\n  //   handleChange(e);\r\n  // };\r\n  let selectedLocations = [];\r\n  const handleClick = (locationid, wineid, winename) => {\r\n    if (!wineid) {\r\n      document.getElementById(\"footerContainer\").style.display = \"flex\";\r\n      document.getElementById(locationid).style.backgroundColor =\r\n        \"rgb(14, 223, 243)\";\r\n      if (!selectedLocations.includes(locationid))\r\n        selectedLocations.push(locationid);\r\n    } else {\r\n      setlocationId(locationid);\r\n      setWineId(wineid);\r\n      setCurrentWine(winename);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const placeWine = () => {\r\n    setlocationArray(selectedLocations);\r\n    setOpen(true);\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.location.reload();\r\n  };\r\n  const fetchData = () => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/locations\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWineCount(data.locations);\r\n        setlocations(data.locations);\r\n      });\r\n  };\r\n  const setWineCount = (data) => {\r\n    let cellarCounter = 0;\r\n    let kitchenCounter = 0;\r\n    let fridgeCounter = 0;\r\n    let cellarEmptyCounter = 0;\r\n    let kitchenEmptyCounter = 0;\r\n    data.forEach(function (item, index) {\r\n      if (item.wineid === \"\") {\r\n        if (item._id.startsWith(\"c\")) {\r\n          cellarEmptyCounter++;\r\n        } else if (item._id.startsWith(\"k\")) {\r\n          kitchenEmptyCounter++;\r\n        }\r\n      }\r\n      if (item._id.startsWith(\"c\")) {\r\n        cellarCounter++;\r\n      } else if (item._id.startsWith(\"k\")) {\r\n        kitchenCounter++;\r\n      }\r\n      if (item._id.startsWith(\"f\") && item.wineid !== \"\") {\r\n        fridgeCounter++;\r\n      }\r\n    });\r\n    setKitchenEmptyCellCount(kitchenEmptyCounter);\r\n    setCellarEmptyCellCount(cellarEmptyCounter);\r\n    setKitchenCellCount(kitchenCounter);\r\n    setCellarCellCount(cellarCounter);\r\n    setFridgeCellCount(fridgeCounter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setColor = (color, wineID) => {\r\n    if (wineID === params.wineid)\r\n      return <div className=\"redBottleWine blueBottleWine\"></div>;\r\n    else {\r\n      if (color === \"Rouge\") return <div className=\"redBottleWine\"></div>;\r\n      else if (color === \"Blanc\" || color === \"Mousseux\")\r\n        return <div className=\"redBottleWine whiteBottleWine\"></div>;\r\n      else return <div className=\"redBottleWine noBottleWine\"></div>;\r\n    }\r\n  };\r\n\r\n  const setColorShelves = (color, wineID) => {\r\n    if (wineID === params.wineid)\r\n      return (\r\n        <div className=\"redBottleWine blueBottleWine c_shelve_rotate \"></div>\r\n      );\r\n    else {\r\n      if (color === \"Rouge\")\r\n        return <div className=\"redBottleWine c_shelve_rotate \"></div>;\r\n      else if (color === \"Blanc\" || color === \"Mousseux\")\r\n        return (\r\n          <div className=\"redBottleWine whiteBottleWine c_shelve_rotate \"></div>\r\n        );\r\n      else\r\n        return (\r\n          <div className=\"redBottleWine noBottleWine c_shelve_rotate \"></div>\r\n        );\r\n    }\r\n  };\r\n\r\n  const setOctagonColor = (color) => {\r\n    if (color === \"Rouge\") return <div class=\"circleRed\"></div>;\r\n    else if (color === \"Blanc\") return <div class=\"circleWhite\"></div>;\r\n    else return <div class=\"circleTransparent\"></div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main_container\">\r\n      <WineListModal\r\n        open={open}\r\n        wineid={wineId}\r\n        locationid={locationId}\r\n        currentwine={currentWine}\r\n        locationArray={locationArray}\r\n        setOpen={setOpen}\r\n      />\r\n      <div class=\"section_container\">\r\n        <div>\r\n          Cellier contient:{cellarCellCount - cellarEmptyCellCount - 2} libre:\r\n          {cellarEmptyCellCount - 1}\r\n        </div>\r\n        <div class=\"cellar_container\">\r\n          <div className=\"c_column\">\r\n            {locations.map((loc) => {\r\n              let style = \"c_wineRack\";\r\n\r\n              if (loc._id.startsWith(\"ca\")) {\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    {setColor(loc.winegroup, loc.wineid)}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"c_column\">\r\n            {locations.map((loc) => {\r\n              let style = \"c_wineRack\";\r\n              if (loc._id.startsWith(\"cb\")) {\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    {setColor(loc.winegroup, loc.wineid)}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"c_center\">\r\n            {locations.map((loc) => {\r\n              let style = \"c_shelves\";\r\n\r\n              if (loc._id.startsWith(\"cc\")) {\r\n                if (center_counter > 0) style = \"c_shelves c_shelve_border\";\r\n                center_counter++;\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    {setColorShelves(loc.winegroup, loc.wineid)}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"c_column\">\r\n            {locations.map((loc) => {\r\n              let style = \"c_wineRack\";\r\n              if (loc._id.startsWith(\"cd\")) {\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    {setColor(loc.winegroup, loc.wineid)}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"c_column\">\r\n            {locations.map((loc) => {\r\n              if (loc._id.startsWith(\"ce\")) {\r\n                let style = \"c_wineRack\";\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    {setColor(loc.winegroup, loc.wineid)}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div class=\"section_container\">\r\n          <div class=\"section_title\">\r\n            Cuisine contient:\r\n            {kitchenEmptyCellCount - kitchenCellCount} libre:{kitchenCellCount}\r\n          </div>\r\n          <div class=\"kitchen_cellar_container\">\r\n            {locations.map((loc) => {\r\n              let style = \"octagon\";\r\n              if (loc._id.startsWith(\"kc\")) {\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    <div>{setOctagonColor(loc.winegroup)}</div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div class=\"section_container\">\r\n          <div class=\"section_title\">\r\n            RÃ©frigÃ©rateur contient:{fridgeCellCount}\r\n          </div>\r\n          <div class=\"fridge_cellar_container\">\r\n            {locations.map((loc) => {\r\n              let style = \"octagon\";\r\n              if (loc._id.startsWith(\"fa\")) {\r\n                return (\r\n                  <div\r\n                    className={style}\r\n                    id={loc._id}\r\n                    onClick={() => {\r\n                      handleClick(loc._id, loc.wineid, loc.winename);\r\n                    }}\r\n                  >\r\n                    <div>{setOctagonColor(loc.winegroup)}</div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"footerContainer\">\r\n        <div class=\"footerButtonReset\" onClick={refresh}>\r\n          Effacer\r\n        </div>\r\n        <div class=\"footerButtonAdd\" onClick={placeWine}>\r\n          Ajouter\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Cellar;\r\n","C:\\Users\\Richard\\www\\wine\\src\\components\\Form\\Select.jsx",["77","78"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../../index.css\";\r\nconst Select = (props) => {\r\n  // Raisin\r\n  const [data, setData] = useState([]);\r\n  const [dataIsReturned, setDataReturned] = useState(false);\r\n\r\n  const [inputs, setInputs] = useState({\r\n    [props.name]: \"\",\r\n  });\r\n  let handleChange = (e) => {\r\n    setInputs((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    props.handleChange(e);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    let theURL = \"\";\r\n    if (props.list === \"grapes\")\r\n      theURL = process.env.REACT_APP_ENPOINT_URL + \"/grapes\";\r\n    else if (props.list === \"type\")\r\n      theURL = process.env.REACT_APP_ENPOINT_URL + \"/winetype\";\r\n    else if (props.list === \"millesime\")\r\n      theURL = process.env.REACT_APP_ENPOINT_URL + \"/millesime\";\r\n    else if (props.list === \"country\")\r\n      theURL = process.env.REACT_APP_ENPOINT_URL + \"/country\";\r\n    console.log(theURL);\r\n    return fetch(theURL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data.obj);\r\n        setDataReturned(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (dataIsReturned) {\r\n    if (props.label !== \"\") {\r\n      return (\r\n        <>\r\n          <Form.Label>{props.label}</Form.Label>\r\n          <Form.Select\r\n            onChange={handleChange}\r\n            aria-label=\"Default select example\"\r\n            size=\"1\"\r\n            name={props.name}\r\n            value={props.defaultValue || \"\"}\r\n            className={props.css}\r\n          >\r\n            <option>{props.name}</option>\r\n            {data.map((li) => (\r\n              <option value={li.name}>{li.name}</option>\r\n            ))}\r\n          </Form.Select>\r\n        </>\r\n      );\r\n    } else {\r\n      <Form.Select\r\n        onChange={handleChange}\r\n        aria-label=\"Default select example\"\r\n        size=\"1\"\r\n        name={props.name}\r\n        value={props.defaultValue || \"\"}\r\n      >\r\n        <option>{props.name}</option>\r\n        {data.map((li) => (\r\n          <option value={li.name}>{li.name}</option>\r\n        ))}\r\n      </Form.Select>;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Select;\r\n","C:\\Users\\Richard\\www\\wine\\src\\components\\Form\\Input.jsx",["79","80","81","82"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../../index.css\";\r\n\r\nconst Input = (props) => {\r\n  const [input, setInput] = useState(props.name);\r\n\r\n  let handleChange = (e) => {\r\n    setInput(e.target.value);\r\n    props.handleChange(e);\r\n  };\r\n\r\n  let handleClear = () => {\r\n    setInput(\"\");\r\n    let e = { target: {} };\r\n    e.target.value = \"\";\r\n    e.target.name = props.name;\r\n    props.handleChange(e);\r\n  };\r\n\r\n  let handlePlus = () => {\r\n    let theQty = parseInt(input);\r\n    theQty++;\r\n    console.log(\"input\" + theQty);\r\n    setInput(theQty);\r\n    let e = { target: {} };\r\n    e.target.value = theQty;\r\n    e.target.name = props.name;\r\n    props.handleChange(e);\r\n  };\r\n\r\n  let handleRemove = () => {\r\n    let theQty = parseInt(input);\r\n    if (theQty > 0) theQty--;\r\n    console.log(\"input\" + theQty);\r\n    setInput(theQty);\r\n    let e = { target: {} };\r\n    e.target.value = theQty;\r\n    e.target.name = props.name;\r\n    props.handleChange(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.value || props.value === 0) setInput(props.value);\r\n    else setInput(\"\");\r\n  }, []);\r\n\r\n  if (props.label !== \"\") {\r\n    return (\r\n      <>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Form.Control\r\n          name={props.name}\r\n          type={props.type}\r\n          className={props.cssstyle}\r\n          id={props.id}\r\n          placeholder=\"\"\r\n          onChange={handleChange}\r\n          value={props.defaultValue || \"\"}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Form.Control\r\n          name={props.name}\r\n          type={props.type}\r\n          className={props.cssstyle}\r\n          id={props.id}\r\n          placeholder=\"\"\r\n          onChange={handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\Richard\\www\\wine\\src\\components\\Modals\\WineListModal.jsx",["83","84"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Input from \"../Form/Input\";\r\nimport Select from \"../Form/Select\";\r\n\r\nconst WineDetail = (props) => {\r\n  const [wines, setWines] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [wineGroup, setWineGroup] = React.useState(\"All\");\r\n  const [group, setGroup] = useState(\"All\");\r\n\r\n  //const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setSearchValue(\"\");\r\n\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const filterRed = (e) => {\r\n    setWineGroup(e.target.value);\r\n    // setGroup(e.target.value);\r\n    setSearchValue(searchValue);\r\n    setGroup(e.target.value);\r\n  };\r\n\r\n  const filteredWine = wines.filter((wine) => {\r\n    if (searchValue === \"\") {\r\n      if (wineGroup === \"All\") return wine;\r\n      else if (wine.group === wineGroup) return wine;\r\n    } else {\r\n      if (\r\n        wine.name.toLowerCase().includes(searchValue.toLowerCase()) &&\r\n        wine.group === wineGroup\r\n      )\r\n        return wine;\r\n    }\r\n  });\r\n  const sortByName = (wines) => {\r\n    wines.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    return wines;\r\n  };\r\n\r\n  const updateView = (wineid, wineName, wineGroup, qty) => {\r\n    let locObj = {};\r\n    locObj.winegroup = wineGroup;\r\n    locObj.wineid = wineid;\r\n    locObj.winename = wineName;\r\n    locObj.locations = props.locationArray;\r\n    locObj.qty = qty;\r\n    runUpdateView(locObj);\r\n  };\r\n\r\n  const runUpdateView = async (locObj) => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/locations/updateMany\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(locObj),\r\n    }).then(() => {\r\n      fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines/updateById\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          _id: locObj.wineid,\r\n          qty: locObj.locations.length + locObj.qty,\r\n        }),\r\n      }).then((data) => {\r\n        window.location.href = \"../Cellar\";\r\n      });\r\n    });\r\n  };\r\n  const takeWine = (wineid, locationId) => {\r\n    let locObj = {};\r\n    locObj._id = locationId;\r\n    locObj.wineid = \"\";\r\n    locObj.winename = \"\";\r\n    locObj.winegroup = \"\";\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/locations/update\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(locObj),\r\n    }).then((data) => {\r\n      fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines/take/\" + wineid, {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        // body: JSON.stringify(locObj),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines/update\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data.obj[0]),\r\n          }).then((data) => {\r\n            window.location.href = \"../Cellar\";\r\n          });\r\n        });\r\n    });\r\n  };\r\n  const fetchData = () => {\r\n    return fetch(process.env.REACT_APP_ENPOINT_URL + \"/wines\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWines(sortByName(data.obj));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!props.wineid || props.wineid === \"\") {\r\n    return (\r\n      <>\r\n        <Modal show={props.open} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>SÃ©lectionner le vin</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#fff \",\r\n                position: \"sticky \",\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexGrow: 1,\r\n                  backgroundColor: \"#fff \",\r\n                }}\r\n              >\r\n                <Input\r\n                  id=\"wineName\"\r\n                  message=\"Nom du vin\"\r\n                  label=\"\"\r\n                  hasLabel=\"false\"\r\n                  handleChange={handleInputChange}\r\n                ></Input>\r\n              </div>\r\n              <div style={{ display: \"flex\", right: 0 }}>\r\n                <Select\r\n                  handleChange={filterRed}\r\n                  defaultValue={group}\r\n                  list=\"type\"\r\n                  name=\"type\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {filteredWine.map((wine) => {\r\n              return (\r\n                <div\r\n                  className={\"list-item-container\"}\r\n                  onClick={() => {\r\n                    updateView(wine._id, wine.name, wine.group, wine.qty);\r\n                  }}\r\n                >\r\n                  <div className={\"\"}>\r\n                    {wine.name} {wine.millesime}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  } else {\r\n    let currentWine = wines.find((obj) => {\r\n      return obj._id === props.wineid;\r\n    });\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={props.open}\r\n          onHide={handleClose}\r\n          wineid={props.wineid}\r\n          winename={props.currentwine}\r\n          locationid={props.locationid}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Votre choix</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div\r\n              className={\"wine-info-img\"}\r\n              style={{\r\n                backgroundImage: \"url(\" + currentWine.img + \")\",\r\n              }}\r\n            >\r\n              <div className={\"wine-info\"}>\r\n                {currentWine.name} {currentWine.millesime}\r\n                <br />\r\n                reste: {currentWine.qty}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                takeWine(props.wineid, props.locationid);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Prendre\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default WineDetail;\r\n",{"ruleId":"85","severity":1,"message":"86","line":22,"column":9,"nodeType":"87","messageId":"88","endLine":22,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":144,"column":6,"nodeType":"91","endLine":144,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":38,"column":44,"nodeType":"95","messageId":"96","endLine":38,"endColumn":46},{"ruleId":"89","severity":1,"message":"97","line":73,"column":6,"nodeType":"91","endLine":73,"endColumn":8,"suggestions":"98"},{"ruleId":"85","severity":1,"message":"99","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":89,"column":6,"nodeType":"91","endLine":89,"endColumn":8,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":144,"column":34,"nodeType":"95","messageId":"96","endLine":144,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":163,"column":34,"nodeType":"95","messageId":"96","endLine":163,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":181,"column":34,"nodeType":"95","messageId":"96","endLine":181,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":202,"column":34,"nodeType":"95","messageId":"96","endLine":202,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":220,"column":34,"nodeType":"95","messageId":"96","endLine":220,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":244,"column":34,"nodeType":"95","messageId":"96","endLine":244,"endColumn":36},{"ruleId":"93","severity":1,"message":"101","line":267,"column":34,"nodeType":"95","messageId":"96","endLine":267,"endColumn":36},{"ruleId":"85","severity":1,"message":"102","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"89","severity":1,"message":"97","line":41,"column":6,"nodeType":"91","endLine":41,"endColumn":8,"suggestions":"103"},{"ruleId":"85","severity":1,"message":"104","line":13,"column":7,"nodeType":"87","messageId":"88","endLine":13,"endColumn":18},{"ruleId":"85","severity":1,"message":"105","line":21,"column":7,"nodeType":"87","messageId":"88","endLine":21,"endColumn":17},{"ruleId":"85","severity":1,"message":"106","line":32,"column":7,"nodeType":"87","messageId":"88","endLine":32,"endColumn":19},{"ruleId":"89","severity":1,"message":"107","line":46,"column":6,"nodeType":"91","endLine":46,"endColumn":8,"suggestions":"108"},{"ruleId":"93","severity":1,"message":"94","line":31,"column":44,"nodeType":"95","messageId":"96","endLine":31,"endColumn":46},{"ruleId":"89","severity":1,"message":"97","line":114,"column":6,"nodeType":"91","endLine":114,"endColumn":8,"suggestions":"109"},"no-unused-vars","'forward' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayButtons' and 'fetchData'. Either include them or remove the dependency array.","ArrayExpression",["110"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["111"],"'styles' is defined but never used.",["112"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","'inputs' is assigned a value but never used.",["113"],"'handleClear' is assigned a value but never used.","'handlePlus' is assigned a value but never used.","'handleRemove' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.value'. Either include it or remove the dependency array. If 'setInput' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["114"],["115"],{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"118","fix":"121"},{"desc":"122","fix":"123"},{"desc":"118","fix":"124"},"Update the dependencies array to be: [displayButtons, fetchData]",{"range":"125","text":"126"},"Update the dependencies array to be: [fetchData]",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},"Update the dependencies array to be: [props.value]",{"range":"131","text":"132"},{"range":"133","text":"128"},[3998,4000],"[displayButtons, fetchData]",[2162,2164],"[fetchData]",[2921,2923],[1218,1220],[1139,1141],"[props.value]",[3543,3545]]